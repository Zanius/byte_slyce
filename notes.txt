Requirements: Docker, Docker Compose


To run the app:

1. Clone the git repo
2. cd into the cloned directory
3. run "docker-compose up"
4. navigate to "localhost:8080"

This command will start two containers, a phoenix server and a postgres database.

To run the test suite:

1. cd into the directory
2. run "docker-compose run -e MIX_ENV=test phoenix mix test"

This will run phoenix in the test environment and run several ExUnit tests and Wallaby tests running
on headless chrome.

Approach/Assumptions:
I am not an elixir/phoenix developer and I have only been learning elixir for a short time.
In my current job my primary stack is a ruby on rails with a VueJS frontend. 
I may not have followed certain elixir/phoenix conventions that I am unaware of.

The app is not a true SPA since there is no frontend router. Since most of the traffic would
presumably be redirects, it didn't make sense to route incoming traffic through a frontend router.
Since the only visual elements are the url form and a 404 page this is not a huge problem. 
For the sake of this project I didnâ€™t think it was worth the overhead to load react on the 404 page. 

In a normal SPA my layout would be completely React based. I opted to keep the default phoenix 
layout structure because this url shortener app consists of only one form.
